@model CoolCareSystem.Models.ProductModel

@{
    ViewBag.Title = "AddProduct";
}

<p class="title1">Add New Product</p>

@using (Html.BeginForm("AddProduct", "UserProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="alert-notification">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-message">
                    @TempData["SuccessMessage"]
                </div>
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.DevExtreme().TextBoxFor(m => m.ProductName)
                    .ID("ProductName")
                    .Placeholder("Enter Product Name")
                    .Width("100%"))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="a" class="col-md-10">
                @(Html.DevExtreme().HtmlEditorFor(m=>m.Description)
                .ID("Description")
                .Height(300)
                
                .Toolbar(toolbar => toolbar.Items(
                items => {
                items.Add().FormatName(HtmlEditorToolbarItem.Undo);

                items.Add().FormatName(HtmlEditorToolbarItem.Redo);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add()
                .FormatName("size")
                .FormatValues(new[] { "8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt" });

                items.Add()
                .FormatName("font")
                .FormatValues(new[] { "Arial", "Courier New", "Georgia", "Impact", "Lucida Console", "Tahoma", "Times New Roman", "Verdana" });

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.Bold);

                items.Add().FormatName(HtmlEditorToolbarItem.Italic);

                items.Add().FormatName(HtmlEditorToolbarItem.Strike);

                items.Add().FormatName(HtmlEditorToolbarItem.Underline);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.AlignLeft);

                items.Add().FormatName(HtmlEditorToolbarItem.AlignCenter);

                items.Add().FormatName(HtmlEditorToolbarItem.AlignRight);

                items.Add().FormatName(HtmlEditorToolbarItem.AlignJustify);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.OrderedList);

                items.Add().FormatName(HtmlEditorToolbarItem.BulletList);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add()
                .FormatName("header")
                .FormatValues(new JS("[false, 1, 2, 3, 4, 5]"));

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.Color);

                items.Add().FormatName(HtmlEditorToolbarItem.Background);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.Link);

                items.Add().FormatName(HtmlEditorToolbarItem.Image);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);

                items.Add().FormatName(HtmlEditorToolbarItem.Clear);

                items.Add().FormatName(HtmlEditorToolbarItem.CodeBlock);

                items.Add().FormatName(HtmlEditorToolbarItem.Blockquote);

                items.Add().FormatName(HtmlEditorToolbarItem.Separator);
                })
                )
                .MediaResizing(m => m.Enabled(true))

                )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.DevExtreme().NumberBoxFor(m=>m.Price)
                        .ID("priceNumberBox")
                        .Format("₹ #,##0.##")
                        .Placeholder("Enter Price")
                        .Min(1)
                        .Value(0)
                )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BilledYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @(Html.DevExtreme().NumberBoxFor(m=>m.BilledYear)
                    .ID("billYearNumberBox")
                    .Format("#")
                    .ShowSpinButtons(true)
                    .Min(1990)
                    .ActiveStateEnabled(false)
                    .Value(DateTime.Now.Year)
                    .Max(DateTime.Now.Year)
                    .OnKeyDown("BilledYearKeyDown")
                    .Placeholder("Enter Billed Year")
                )
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Choose Image</label>
            <div class="col-md-10">
                <label class="btn btn-primary btn-sm">
                    Choose
                    <i class="glyphicon glyphicon-picture"></i>
                    <input type="file" name="fileData" id="ImageUpload" accept="image/*" />
                </label>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Image Preview</label>
            <div class="col-md-10">
                <p><img id="imgpreview" src="~/Content/images/image-preview.png" /></p>
                <p id="imgpreviewName"><b>No Preview Available</b></p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Product" class="btn btn-primary btn-sm" />
            </div>
        </div>
    </div>
}

<div>
    <b>@Html.ActionLink("Back to Products", "Product")</b>
</div>

@section Scripts {
    <script src="~/Scripts/product.js"></script>
    <script>
        function BilledYearKeyDown(e) {
            var event = e.jQueryEvent
            event.preventDefault();
        }
    </script>
}
